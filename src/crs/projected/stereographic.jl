"""
    Stereographic{}

[Description]
"""
struct Stereographic{Mode, lat‚ÇÅ, Datum, Shift, M <: Met} <: Projected{Datum, Shift}
    x::M
    y::M
end

#TODO: Constructors


# ------------
# CONVERSIONS
# ------------

function formulas(::Type{<:Stereographic{EllipticalMode, lat‚ÇÅ, Datum}}, ::Type{T}) where {lat‚ÇÅ, Datum, T}
    œïF = T(ustrip(deg2rad(lat‚ÇÅ)))
    üåé = ellipsoid(Datum)

    e = T(eccentricity(üåé))
    a = T(majoraxis(üåé))
    œÄ = T(pi)
    #It seems like k‚ÇÄ tends to be 1.0, however if one unit on the map should not be one unit in reality, this needs to be changed
    #Still, https://neacsu.net/geodesy/snyder/5-azimuthal/sect_21 states that for projections of Europe, Africa and Asia the values should be 0.976, 0.941 and 0.939 respectively
    k‚ÇÄ = T(1.0)

    function fœá(œï)
        sinœï = sin(œï)
        œá = 2sqrt(atan((1 + sinœï)/(1 - sinœï) * ((1 - e*sinœï)/(1 + e*sinœï))^e)) - œÄ/2
    end
    œá‚ÇÅ = fœá(œïF)
    m‚ÇÅ = cos(œïF)/sqrt(1 - e^2*sin(œïF)^2)

    function fx(Œª, œï)
        œá = fœá(œï)
        A = 2a*k‚ÇÄ*m‚ÇÅ/(cos(œá‚ÇÅ)*(1 + sin(œá‚ÇÅ)sin(œá) + cos(œá‚ÇÅ)cos(œá)cos(Œª)))
        x = A*cos(œá)*sin(Œª)
    end

    function fy(Œª, œï)
        œá = fœá(œï)
        A = 2a*k‚ÇÄ*m‚ÇÅ/(cos(œá‚ÇÅ)*(1 + sin(œá‚ÇÅ)sin(œá) + cos(œá‚ÇÅ)cos(œá)cos(Œª)))
        y = A*(cos(œá‚ÇÅ)*sin(œá) - sin(œá‚ÇÅ)*cos(œá)cos(Œª))
    end
    fx, fy
end

function formulas(::Type{<:Stereographic{SphericalMode, lat‚ÇÅ, Datum}}, ::Type{T}) where {lat‚ÇÅ, Datum, T}
    œïF = T(ustrip(deg2rad(lat‚ÇÅ)))
    üåé = ellipsoid(Datum)

    e = T(eccentricity(üåé))
    œÄ = T(pi)

    #It seems like k‚ÇÄ tends to be 1.0, however if one unit on the map should not be one unit in reality, this needs to be changed
    k‚ÇÄ = T(1.0)

    function fx(Œª, œï)
        k = 2k‚ÇÄ*(1 + sin(œïF)sin(œï) + cos(œïF)cos(œï)cos(Œª))
        x = k*cos(œï)sin(Œª)
    end

    function fy(Œª, œï)
        k = 2k‚ÇÄ*(1 + sin(œïF)sin(œï) + cos(œïF)cos(œï)cos(Œª))
        y = k*(cos(œïF)sin(œï) - sin(œïF)cos(œï)cos(Œª))
    end
    fx, fy
end

function backward(C::Type{<:Stereographic{EllipticalMode, lat‚ÇÅ, Datum}}, x, y) where {lat‚ÇÅ,Datum}
    T = typeof(x)
    œï‚ÇÅ = T(ustrip(deg2rad(lat‚ÇÅ)))
    #TODO: add k‚ÇÄ parameter
    k‚ÇÄ = T(1.0)
    Œª‚Çõ, œï‚Çõ = sphericalinv(x, y, œï‚ÇÅ, k‚ÇÄ)
    fx, fy = formulas(C, T)
    projinv(fx, fy, x, y, Œª‚Çõ, œï‚Çõ)
end

function backward(::Type{<:Stereographic{SphericalMode, lat‚ÇÅ, Datum}}, x, y) where {lat‚ÇÅ,Datum}
    T = typeof(x)
    œï‚ÇÅ = T(ustrip(deg2rad(lat‚ÇÅ)))
    #TODO: add k‚ÇÄ parameter
    k‚ÇÄ = T(1.0)
    sphericalinv(x, y, œï‚ÇÅ, k‚ÇÄ)
end

# ----------
# FALLBACKS
# ----------

#TODO: indomain and Base.convert functions

# -----------------
# HELPER FUNCTIONS
# -----------------

function sphericalinv(x, y, œï‚ÇÅ, k‚ÇÄ)
  œÅ = hypot(x, y)
  if œÅ < atol(x)
    zero(x), œï‚ÇÅ
  else
    c = 2atan(œÅ, 2k‚ÇÄ)
    sinc = sin(c)
    cosc = cos(c)
    sinœï‚ÇÅ = sin(œï‚ÇÅ)
    cosœï‚ÇÅ = cos(œï‚ÇÅ)
    Œª = atan(x * sinc, œÅ * cosœï‚ÇÅ * cosc - y * sinœï‚ÇÅ * sinc)
    œï = asinclamp(cosc * sinœï‚ÇÅ + (y * sinc * cosœï‚ÇÅ / œÅ))
    Œª, œï
  end
end
